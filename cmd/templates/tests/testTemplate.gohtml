//package {{.PackageName}} is generated by server
package {{.PackageName}}
import (
	"testing"
    "github.com/percybolmer/server"
    "github.com/percybolmer/credentials"
)


	{{ if .Db }}
	var (
		workingDB = []byte(`{ "db": { "host": "localhost", "username": "", "password": "", "databasename": "", "port": 0} }`)
	)
    {{end}}

    func TestNew{{.ServerName}}(t *testing.T) {
		b := New{{.ServerName}}("t")
		if b == nil {
			t.Fatal("This should not be able to fail")
		}
	}

    func TestDisconnect(t *testing.T) {
        b := getWorking{{.ServerName}}()

        /* Test disconnection  on Nil */
        err := b.Disconnect()
        if err != server.ErrCannotCloseNilDatabase {
            t.Error(err)
        }

        err = b.Connect(b.credentials)
        if err != nil {
            t.Error(err)
        }
        /* Now test to disconnect without errors */
        err = b.Disconnect()
        if err != nil {
            t.Error(err)
        }
        err = b.Ping()
	    if err == nil {
		    t.Error("SHould have failed to ping the DB ")
	    }
    }

    func TestInterfaceImplementation(t *testing.T) {
	    var _ server.Server = (*{{.ServerName}})(nil)
    }
	
    {{ if .Db }}
    {{ template "getWorkingTestDB" . }}
    {{ template "TestConnectionDB" . }}
	{{end}}
	


